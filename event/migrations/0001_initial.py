# Generated by Django 4.2.23 on 2025-09-29 12:40

import django.core.validators
from django.db import migrations, models
import event.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EventProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the event or organization', max_length=200)),
                ('description', models.TextField(help_text='Description of the event or organization')),
                ('event_type', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('hybrid', 'Hybrid')], default='offline', help_text='Type of event: Online, Offline, or Hybrid', max_length=10)),
                ('location', models.CharField(help_text='Location/platform where events are held', max_length=50)),
                ('target_audience', models.TextField(blank=True, help_text='Description of the target audience for this event (optional)', null=True)),
                ('email', models.EmailField(help_text='Contact email address', max_length=254)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number (optional)', max_length=20, null=True)),
                ('is_phone_public', models.BooleanField(default=False, help_text='Whether to display phone number publicly')),
                ('website', models.URLField(blank=True, help_text='Event or organization website URL (optional)', null=True, validators=[django.core.validators.URLValidator()])),
                ('linkedin_url', models.URLField(blank=True, help_text='LinkedIn profile URL (optional)', null=True, validators=[django.core.validators.URLValidator()])),
                ('cover_image', models.ImageField(help_text='Cover image for the event or organization (required)', upload_to=event.models.event_cover_upload_path)),
                ('start_date', models.DateField(blank=True, help_text='Start date for one-time events (optional)', null=True)),
                ('end_date', models.DateField(blank=True, help_text='End date for one-time events (optional)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the profile was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the profile was last updated')),
            ],
            options={
                'verbose_name': 'Event Profile',
                'verbose_name_plural': 'Event Profiles',
                'ordering': ['-created_at'],
            },
        ),
    ]
