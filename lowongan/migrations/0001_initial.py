# Generated by Django 4.2.23 on 2025-09-29 12:40

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Lowongan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the lowongan', primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Title of the job opportunity', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the job requirements and responsibilities')),
                ('job_type', models.CharField(choices=[('speaker', 'Speaker/Presenter'), ('workshop_facilitator', 'Workshop Facilitator'), ('moderator', 'Event Moderator'), ('panelist', 'Panel Discussion'), ('trainer', 'Training Session'), ('consultant', 'Consultation'), ('other', 'Other')], help_text='Type of job/role', max_length=25)),
                ('experience_level_required', models.CharField(choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('EXPERT', 'Expert'), ('ANY', 'Any Level')], default='ANY', help_text='Minimum experience level required', max_length=15)),
                ('location', models.CharField(choices=[('aceh', 'Aceh'), ('sumatera_utara', 'Sumatera Utara'), ('sumatera_selatan', 'Sumatera Selatan'), ('sumatera_barat', 'Sumatera Barat'), ('bengkulu', 'Bengkulu'), ('riau', 'Riau'), ('kepulauan_riau', 'Kepulauan Riau'), ('jambi', 'Jambi'), ('lampung', 'Lampung'), ('bangka_belitung', 'Bangka Belitung'), ('kalimantan_barat', 'Kalimantan Barat'), ('kalimantan_timur', 'Kalimantan Timur'), ('kalimantan_selatan', 'Kalimantan Selatan'), ('kalimantan_tengah', 'Kalimantan Tengah'), ('kalimantan_utara', 'Kalimantan Utara'), ('banten', 'Banten'), ('dki_jakarta', 'DKI Jakarta'), ('jawa_barat', 'Jawa Barat'), ('jawa_tengah', 'Jawa Tengah'), ('daerah_istimewa_yogyakarta', 'Daerah Istimewa Yogyakarta'), ('jawa_timur', 'Jawa Timur'), ('bali', 'Bali'), ('nusa_tenggara_timur', 'Nusa Tenggara Timur'), ('nusa_tenggara_barat', 'Nusa Tenggara Barat'), ('gorontalo', 'Gorontalo'), ('sulawesi_barat', 'Sulawesi Barat'), ('sulawesi_tengah', 'Sulawesi Tengah'), ('sulawesi_utara', 'Sulawesi Utara'), ('sulawesi_tenggara', 'Sulawesi Tenggara'), ('sulawesi_selatan', 'Sulawesi Selatan'), ('maluku_utara', 'Maluku Utara'), ('maluku', 'Maluku'), ('papua_barat', 'Papua Barat'), ('papua_barat_daya', 'Papua Barat Daya'), ('papua_tengah', 'Papua Tengah'), ('papua', 'Papua'), ('papua_selatan', 'Papua Selatan'), ('papua_pegunungan', 'Papua Pegunungan')], help_text='Province/location where the job will take place', max_length=50)),
                ('is_remote', models.BooleanField(default=False, help_text='Whether this job can be done remotely')),
                ('event_date', models.DateField(help_text='Date when the event/job will take place')),
                ('event_time', models.TimeField(blank=True, help_text='Time when the event/job will start (optional)', null=True)),
                ('duration_hours', models.PositiveIntegerField(help_text='Expected duration in hours', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(24)])),
                ('budget_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Budget/compensation amount in IDR (optional)', max_digits=12, null=True)),
                ('budget_negotiable', models.BooleanField(default=True, help_text='Whether the budget is negotiable')),
                ('application_deadline', models.DateField(help_text='Deadline for applications')),
                ('max_applicants', models.PositiveIntegerField(blank=True, help_text='Maximum number of applicants (optional)', null=True)),
                ('requirements', models.TextField(blank=True, help_text='Additional requirements or qualifications')),
                ('contact_email', models.EmailField(help_text='Contact email for this opportunity', max_length=254)),
                ('contact_phone', models.CharField(blank=True, help_text='Contact phone number (optional)', max_length=20, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('OPEN', 'Open for Applications'), ('CLOSED', 'Closed'), ('COMPLETED', 'Completed')], default='DRAFT', help_text='Current status of the lowongan', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the lowongan was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the lowongan was last updated')),
                ('published_at', models.DateTimeField(blank=True, help_text='When the lowongan was published/made open', null=True)),
            ],
            options={
                'verbose_name': 'Lowongan',
                'verbose_name_plural': 'Lowongan',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LowonganApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the application', primary_key=True, serialize=False)),
                ('cover_letter', models.TextField(help_text='Cover letter or motivation for applying')),
                ('proposed_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Proposed compensation rate in IDR (optional)', max_digits=12, null=True)),
                ('availability_notes', models.TextField(blank=True, help_text='Notes about availability or scheduling (optional)')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('WITHDRAWN', 'Withdrawn')], default='PENDING', help_text='Current status of the application', max_length=15)),
                ('applied_at', models.DateTimeField(auto_now_add=True, help_text='When the application was submitted')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the application was last updated')),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='When the application was reviewed', null=True)),
            ],
            options={
                'verbose_name': 'Lowongan Application',
                'verbose_name_plural': 'Lowongan Applications',
                'ordering': ['-applied_at'],
            },
        ),
    ]
